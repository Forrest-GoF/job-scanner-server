name: CI-CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  S3_BUCKET_NAME: job-scanner-bucket
  APPLICATION: ${{ secrets.APPLICATION }}
  CODE_DEPLOY_APPLICATION_NAME: jobscanner-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: jobscanner-server

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

        # [1] Create yaml file
      - uses: actions/checkout@v2
      - run: touch ./src/main/resources/application.yml
      - run: echo "${{env.APPLICATION}}" > ./src/main/resources/application.yml
      - uses: actions/upload-artifact@v2
        with:
          name: application.yml
          path: ./src/main/resources/application.yml

        # [1]
      #       - name: Set yaml file
      #         uses: microsoft/variable-substitution@v1
      #         with:
      #           files: ${{ env.RESOURCE_PATH }}
      #         env:
      #           spring.datasource.url: ${{ secrets.RDS_HOST }}
      #           spring.datasource.username: ${{ secrets.RDS_USERNAME }}
      #           spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
      #           spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
      #           jpa:hibernaet:ddl-auto: none
      #           jpa:hibernaet:properties:hibernate:format_sql: true
      #           logging.level:org.hibernate.SQL: debug
      #           api:crawler-endpoint: ${{ secrets.CRAWLER_ENDPOINT }}
      #           api:nps-key: ${{ secrets.NPS_KEY }}
      #           app:auth:app-token-secret: ${{ secrets.APP_TOKEN_SECRET }}
      #           app:auth:refresh-token-secret: ${{ secrets.REFRESH_TOKEN_SECRETE }}
      #           app:auth:app-token-expiry: ${{ secrets.APP_TOKEN_EXPIRY }}
      #           app:auth:refresh-token-expiry: ${{ secrets.REFRESH_TOKEN_EXPIRY }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

        # [2]
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

        # [3]
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

        # [4]
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

        # [5]
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

        # [6]
      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
